// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List        = require("bs-platform/lib/js/list.js");
var $$Array     = require("bs-platform/lib/js/array.js");
var Caml_string = require("bs-platform/lib/js/caml_string.js");

function stringToListOfChars(str) {
  return $$Array.to_list($$Array.init(str.length, (function (i) {
                    return Caml_string.get(str, i);
                  })));
}

function hammingDistance(strand1, strand2) {
  var list1 = stringToListOfChars(strand1);
  var list2 = stringToListOfChars(strand2);
  return List.fold_left2((function (state, char1, char2) {
                var match = +(char1 === char2);
                if (match !== 0) {
                  return state;
                } else {
                  return state + 1 | 0;
                }
              }), 0, list1, list2);
}

console.log("small distance");

var match = +(hammingDistance("GGACG", "GGTCG") === 1);

console.log(match !== 0 ? "Passed" : "Failed");

console.log("large distance");

var match$1 = +(hammingDistance("GATACA", "GCATAA") === 4);

console.log(match$1 !== 0 ? "Passed" : "Failed");

console.log("large distance in off-by-one strand");

var match$2 = +(hammingDistance("GGACGGATTCTG", "AGGACGGATTCT") === 9);

console.log(match$2 !== 0 ? "Passed" : "Failed");

exports.stringToListOfChars = stringToListOfChars;
exports.hammingDistance     = hammingDistance;
/*  Not a pure module */
