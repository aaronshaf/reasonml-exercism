// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List              = require("bs-platform/lib/js/list.js");
var Caml_int32        = require("bs-platform/lib/js/caml_int32.js");
var Exercism$Exercism = require("./Exercism.bs.js");

function sum(squares) {
  return List.fold_left((function (state, number) {
                return state + number | 0;
              }), 0, squares);
}

function square(number) {
  return Caml_int32.imul(number, number);
}

function squareList(numbers) {
  return List.map((function (number) {
                return Caml_int32.imul(number, number);
              }), numbers);
}

function sumOfSquares(max) {
  return sum(squareList(Exercism$Exercism.Utils[/* range */0](1, max + 1 | 0)));
}

function squareOfSum(max) {
  var number = sum(Exercism$Exercism.Utils[/* range */0](1, max + 1 | 0));
  return Caml_int32.imul(number, number);
}

console.log("difference of squares 1");

var match = +((squareOfSum(1) - sumOfSquares(1) | 0) === 0);

console.log(match !== 0 ? "Passed" : "Failed");

console.log("difference of squares 5");

var match$1 = +((squareOfSum(5) - sumOfSquares(5) | 0) === 170);

console.log(match$1 !== 0 ? "Passed" : "Failed");

console.log("difference of squares 100");

var match$2 = +((squareOfSum(100) - sumOfSquares(100) | 0) === 25164150);

console.log(match$2 !== 0 ? "Passed" : "Failed");

exports.sum          = sum;
exports.square       = square;
exports.squareList   = squareList;
exports.sumOfSquares = sumOfSquares;
exports.squareOfSum  = squareOfSum;
/*  Not a pure module */
